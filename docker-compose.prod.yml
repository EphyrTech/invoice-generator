version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "3000"
    environment:
      # Production environment
      - NODE_ENV=production
      - PORT=3000
      - HOSTNAME=0.0.0.0

      # Database connection (connects to db service)
      - DATABASE_URL=postgresql://invoice_user:invoice_secure_password_2024@db:5432/invoice_db

      # NextAuth configuration with defaults
      - NEXTAUTH_URL=${NEXTAUTH_URL:-http://localhost:3000}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET:-invoice-nextauth-secret-change-in-production-2024}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin123}

      # Disable telemetry
      - NEXT_TELEMETRY_DISABLED=1
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    labels:
      - "coolify.managed=true"

  db:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      # Database configuration with secure defaults
      - POSTGRES_USER=invoice_user
      - POSTGRES_PASSWORD=invoice_secure_password_2024
      - POSTGRES_DB=invoice_db
      - POSTGRES_INITDB_ARGS=--auth-host=scram-sha-256 --auth-local=scram-sha-256
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups:rw
      - ./docker/init-db.sql:/docker-entrypoint-initdb.d/01-init-db.sql:ro
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U invoice_user -d invoice_db"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    labels:
      - "coolify.managed=true"

volumes:
  postgres_data:
    driver: local

networks:
  app-network:
    driver: bridge
