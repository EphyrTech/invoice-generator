
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    ports:
      - "3000:3000"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - NODE_ENV=production
    depends_on:
      - db
    networks:
      - invoice-network

  db:
    image: postgres:15-alpine
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-invoice_db}
      - POSTGRES_INITDB_ARGS=--auth-host=scram-sha-256 --auth-local=scram-sha-256
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
    networks:
      - invoice-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-invoice_db}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL:-admin@example.com}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD:-admin}
      - PGADMIN_LISTEN_PORT=80
    ports:
      - "8082:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - db
    networks:
      - invoice-network

  # Database backup service (optional - run manually)
  db-backup:
    image: postgres:15-alpine
    profiles: ["backup"]  # Only runs when explicitly called
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-invoice_db}
    volumes:
      - ./backups:/backups
    networks:
      - invoice-network
    depends_on:
      - db
    command: >
      sh -c "
        echo 'Creating backup...' &&
        pg_dump -h db -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-invoice_db} > /backups/backup_$$(date +%Y%m%d_%H%M%S).sql &&
        echo 'Backup created successfully!'
      "

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  invoice-network:
    driver: bridge
